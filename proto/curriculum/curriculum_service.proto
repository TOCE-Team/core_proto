syntax = "proto3";
package  curriculum_service;

import "course_proto_model.proto";
import "assistant_moderator_model.proto";
import "form_model.proto";
import "section_proto_model.proto";
import "lesson_proto_model.proto";
import "assignments_model.proto";
import "quiz_model.proto";


service CurriculumServiceProto {
  // Coure
  rpc CreateCourseCall(CreateCourseProtoReq) returns (CourseProtoModel);
  rpc GetCourseByCourseIdCall(GetCourseByCourseIdProtoReq) returns (CourseProtoModel);
  //rpc GetAllCourseByCategoryIdCall(GetAllCourseByCategoryIdProtoReq) returns (CourseProtoModel);
  rpc GetCourseByCourseSlugCall(GetCourseByCourseSlugProtoReq) returns (CourseProtoModel);
  rpc GetOwnerCall(GetOwnerReq) returns (GetOwnerRes);
  rpc UpdateCourseCall(UpdateCourseProtoReq) returns (CourseProtoModel);
  rpc GetAllCoursesCall(Empty) returns (GetAllCoursesRes);

  // Section
  rpc CreateSectionCall(CreateSectionProtoReq) returns (SectionProtoModel);
  rpc GetSectionByCourseIdAndSectionIdCall(GetSectionByCoureIdAndSectionIdProtoReq) returns (SectionProtoModel);
  rpc UpdateSectionCall(UpdateSectionProtoReq) returns (SectionProtoModel);
  rpc GetAllSectionInCourseByCourseIdCall(GetAllSectionInCourseByCoureIdProtoReq) returns (SectionList);

  //lesson
  rpc CreateLessonCall(CreateLessonProtoReq) returns (LessonProtoModel);
  rpc UpdateLessonCall(UpdateLessonProtoReq) returns (LessonProtoModel);
  rpc GetLessonCall(GetLessonProtoReq) returns (LessonProtoModel);
  rpc GetAllLessonBySectionIdCall(GetAllLessonBySectionIdProtoReq) returns (LessonProtoList);
  rpc AddLessonCall(AddLessonProtoReq) returns (AddLessonProtoRes);

  // For course assistant - moderator
  rpc AddCourseAssistantCall(AddCourseAssistantProtoReq)            returns (CourseAssistantBase);
  rpc GetCourseAssistantCall(GetCourseAssistantProtoReq)            returns (CourseAssistantListProRes);
  rpc DeleteCourseAssistantCall(DeleteCourseAssistantProtoReq)      returns (Empty);
  rpc AddCourseModeratorCall(AddCourseModeratorProtoReq)            returns (CourseModeratorBase);
  rpc GetCourseModeratorCall(GetCourseModeratorProtoReq)            returns (CourseModeratorListProRes);
  rpc DeleteCourseModeratorCall(DeleteCourseModeratorProtoReq)      returns (Empty);

  // Form 
  rpc GetFormByIdCall(GetFormByIdProtoReq)                                   returns (FormProtoModel);
  rpc CreateFormCall(CreateFormProtoReq)                                     returns (FormProtoModel);
  rpc AddShortTextToFormCall(CreateFormShortTextProtoReq)                    returns (FormProtoModel);
  rpc AddParagraphToFormCall(CreateFormParagraphProtoReq)                    returns (FormProtoModel);
  rpc AddMultichoiceToFormCall(CreateFormMultichoiceProtoReq)                returns (FormProtoModel);
  rpc AddMultichoiceItemToMultichoiceCall(CreateFormMultichoiceItemProtoReq) returns (FormProtoModel);
  rpc AddDropdownToFormCall(CreateFormDropdownProtoReq)                      returns (FormProtoModel);
  rpc AddDropdownItemToDropdownCall(CreateFormDropdownItemProtoReq)          returns (FormProtoModel);

  // Quiz
  rpc GetQuizBankByIdCall(GetQuizBankByIdProtoReq)      returns(QuizBankProtoModel);
  rpc GetQuizBankListCall(GetQuizBankListProtoReq)      returns(GetQuizBankListProtoRes);
  rpc CreateQuizBankCall(CreateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc UpdateQuizBankCall(UpdateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc DeleteQuizBankCall(DeleteQuizBankProtoReq)        returns(Empty);

  rpc GetQuizByIdCall(GetQuizByIdProtoReq)              returns(QuizProtoModel);
  rpc GetQuizListCall(GetQuizListProtoReq)              returns(GetQuizListProtoRes);
  rpc CreateQuizCall(CreateQuizProtoReq)                returns(QuizProtoModel);
  rpc UpdateQuizCall(UpdateQuizProtoReq)                returns(QuizProtoModel);
  rpc DeleteQuizCall(DeleteQuizProtoReq)                returns(Empty);

  rpc CreateQuizSetCall(CreateQuizSetProtoReq)          returns(QuizSetProtoModel);
  rpc GetQuizSetByIdCall(GetQuizSetByIdProtoReq)        returns(QuizSetProtoModel);
  rpc GetQuizSetListCall(GetQuizSetListProtoReq)        returns(GetQuizListProtoRes);
  rpc DeleteQuizSetCall(DeleteQuizSetProtoReq)          returns(Empty);
  // For assignment
  rpc CreateAssignmentCall(CreateAssignmentProtoReq) returns (AssignmentProtoModel);
  rpc AddQuizToAssignmentCall(AddQuizProtoReq) returns (Empty);
  rpc AddGraderToAssignmentCall(AddGraderProtoReq) returns (Empty);
  rpc ViewGraderCall(ViewGraderProtoReq) returns (GraderListId);
  rpc AddRequirmentToAssignmentCall(AddRequirmentProtoReq) returns (Empty);
}
