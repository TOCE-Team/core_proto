syntax = "proto3";
package  curriculum_service;

import "course_proto_model.proto";
import "assistant_moderator_model.proto";
import "form_model.proto";
import "section_proto_model.proto";
import "lesson_proto_model.proto";
import "assignments_model.proto";
import "quiz_model.proto";
import "comment_model.proto";

message Empty {}

service CurriculumServiceProto {
  // Coure
  rpc CreateCourseCall(CreateCourseProtoReq) returns (CourseProtoModel);
  rpc GetCourseByCourseIdCall(GetCourseByCourseIdProtoReq) returns (CourseProtoModel);
  //rpc GetAllCourseByCategoryIdCall(GetAllCourseByCategoryIdProtoReq) returns (CourseProtoModel);
  rpc GetCourseByCourseSlugCall(GetCourseByCourseSlugProtoReq) returns (CourseProtoModel);
  rpc GetOwnerCall(GetOwnerReq) returns (GetOwnerRes);
  rpc UpdateCourseCall(UpdateCourseProtoReq) returns (CourseProtoModel);
  rpc GetAllCoursesCall(GetAllCoursesReq) returns (GetAllCoursesRes);
  rpc GetCourseSectionsAndLessonsCall(GetCourseSectionsAndLessonsReq) returns (GetCourseSectionsAndLessonsRes);

  // Section
  rpc CreateSectionCall(CreateSectionProtoReq) returns (SectionProtoModel);
  rpc GetSectionByCourseIdAndSectionIdCall(GetSectionByCoureIdAndSectionIdProtoReq) returns (SectionProtoModel);
  rpc UpdateSectionCall(UpdateSectionProtoReq) returns (SectionProtoModel);
  rpc GetAllSectionInCourseByCourseIdCall(GetAllSectionInCourseByCoureIdProtoReq) returns (SectionList);

  //lesson
  rpc CreateLessonCall(CreateLessonProtoReq) returns (LessonProtoModel);
  rpc UpdateLessonCall(UpdateLessonProtoReq) returns (LessonProtoModel);
  rpc GetLessonCall(GetLessonProtoReq) returns (LessonProtoModel);
  rpc GetAllLessonBySectionIdCall(GetAllLessonBySectionIdProtoReq) returns (LessonProtoList);
  rpc AddLessonCall(AddLessonProtoReq) returns (AddLessonProtoRes);

  // For course assistant - moderator
  rpc AddCourseAssistantCall(AddCourseAssistantProtoReq)       returns (CourseAssistantBase);
  rpc GetCourseAssistantCall(GetCourseAssistantProtoReq)       returns (CourseAssistantListProRes);
  rpc DeleteCourseAssistantCall(DeleteCourseAssistantProtoReq) returns (Empty);
  rpc AddCourseModeratorCall(AddCourseModeratorProtoReq)       returns (CourseModeratorBase);
  rpc GetCourseModeratorCall(GetCourseModeratorProtoReq)       returns (CourseModeratorListProRes);
  rpc DeleteCourseModeratorCall(DeleteCourseModeratorProtoReq) returns (Empty);

  rpc AddCourseManagementCall(AddCourseManagementProtoReq)       returns (CourseManagementBase);
  rpc GetCourseManagementCall(GetCourseManagementProtoReq)       returns (CourseManagementListProRes);
  rpc UpdateCourseManagementCall(UpdateCourseManagementProtoReq) returns (CourseManagementBase);
  rpc DeleteCourseManagementCall(DeleteCourseManagementProtoReq) returns (Empty);

  // Form 
  rpc GetFormByIdCall(GetFormByIdProtoReq)                                   returns (FormProtoModel);
  rpc CreateFormCall(CreateFormProtoReq)                                     returns (Empty);
  rpc AddShortTextToFormCall(CreateFormShortTextProtoReq)                    returns (Empty);
  rpc AddParagraphToFormCall(CreateFormParagraphProtoReq)                    returns (Empty);
  rpc AddMultichoiceToFormCall(CreateFormMultichoiceProtoReq)                returns (Empty);
  rpc AddMultichoiceItemToMultichoiceCall(CreateFormMultichoiceItemProtoReq) returns (Empty);
  rpc AddDropdownToFormCall(CreateFormDropdownProtoReq)                      returns (Empty);
  rpc AddDropdownItemToDropdownCall(CreateFormDropdownItemProtoReq)          returns (Empty);

  // Quiz
  rpc GetQuizBankByIdCall(GetQuizBankByIdProtoReq)      returns(QuizBankProtoModel);
  rpc GetQuizBankListCall(GetQuizBankListProtoReq)      returns(GetQuizBankListProtoRes);
  rpc CreateQuizBankCall(CreateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc UpdateQuizBankCall(UpdateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc DeleteQuizBankCall(DeleteQuizBankProtoReq)        returns(Empty);

  rpc GetQuizByIdCall(GetQuizByIdProtoReq)              returns(QuizProtoModel);
  rpc GetQuizListCall(GetQuizListProtoReq)              returns(GetQuizListProtoRes);
  rpc CreateQuizCall(CreateQuizProtoReq)                returns(QuizProtoModel);
  rpc UpdateQuizCall(UpdateQuizProtoReq)                returns(QuizProtoModel);
  rpc DeleteQuizCall(DeleteQuizProtoReq)                returns(Empty);

  rpc CreateQuizSetCall(CreateQuizSetProtoReq)          returns(QuizSetProtoModel);
  rpc GetQuizSetByIdCall(GetQuizSetByIdProtoReq)        returns(QuizSetProtoModel);
  rpc GetQuizSetListCall(GetQuizSetListProtoReq)        returns(GetQuizListProtoRes);
  rpc DeleteQuizSetCall(DeleteQuizSetProtoReq)          returns(Empty);

  rpc GetQuizTestCall(GetQuizTestProtoReq)              returns(QuizTestProtoModel);
  rpc CreateQuizTestCall(CreateQuizTestProtoReq)        returns(QuizTestProtoModel);
  rpc UpdateQuizTestCall(UpdateQuizTestProtoReq)        returns(QuizTestProtoModel);
  rpc DeleteQuizTestCall(DeleteQuizTestProtoReq)        returns(Empty);

  rpc GetQuizTestSetCall(GetQuizTestSetProtoReq)        returns(QuizTestBaseList);
  rpc CreateQuizTestSetCall(CreateQuizTestSetProtoReq)  returns(QuizTestSetProtoModel);
  rpc DeleteQuizTestSetCall(DeleteQuizTestSetProtoReq)  returns(Empty);
  

  
  // For assignment
  // CRUD assignment
  rpc CreateAssignmentCall(CreateAssignmentProtoReq) returns (AssignmentProtoModel);
  rpc GetAssignmentsCall(AssignmentQuery) returns (AssignmentList);
  rpc GetAssignmentByIdCall(GetAssignmentByIdProtoReq) returns (AssignmentProtoModel);
  rpc UpdateAssignmentCall(UpdateAssignmentProtoReq) returns (AssignmentProtoModel);
  rpc DeleteAssignmentCall(DeleteAssignmentProtoReq) returns (Empty);

  rpc AddQuizToAssignmentCall(AddQuizProtoReq) returns (Empty);
  rpc AddGraderToAssignmentCall(AddGraderProtoReq) returns (Empty);
  rpc ViewGraderCall(ViewGraderProtoReq) returns (GraderListId);
  rpc AddRequirmentToAssignmentCall(AddRequirmentProtoReq) returns (Empty);
  rpc UpdateRequirmentCall(UpdateAssignmentRequirmentProtoReq) returns (Empty);

  // For Comment 
  rpc AddCommentToPostCall(AddCommentToPostProtoReq) returns (CommentProtoModel);
  rpc AddCommentToCommentCall(AddCommentToCommentProtoReq) returns (CommentProtoModel);
  rpc UpVoteCommentCall(VoteCommentProtoReq) returns (Empty);
  rpc DownVoteCommentCall(VoteCommentProtoReq) returns (Empty);
  rpc GetCommentPostCall(GetCommentPostProtoReq) returns (ListCommentTreeNodeProtoModel);
  rpc UpdateCommentCall(UpdateCommentProtoReq) returns (CommentProtoModel);
  rpc DeleteCommentCall(DeleteCommentProtoReq) returns (Empty);
  rpc GetCommentByIdCall(GetCommentByIdProtoReq) returns (CommentProtoModel);
  /// post
  rpc GetListPostCall(PostQuery) returns (ListPost);
  rpc CreatePostCall(CreatePostProtoReq) returns (PostProtoModel);
  rpc UpdatePostCall(UpdatePostProtoReq) returns (PostProtoModel);
  rpc DeletePostCall(DeletePostProtoReq) returns (Empty);
  rpc GetPostByIdCall(GetPostByIdProtoReq) returns (PostProtoModel);
 
  rpc AddPostToCourseCall(AddPostCourseProtoReq) returns (Empty);
  rpc AddPostToLessonCall(AddPostLessonProtoReq) returns (Empty);
  rpc AddPostToSectionCall(AddPostSectionProtoReq) returns (Empty);
  rpc AddPostToAssignmentCall(AddPostAssignmentProtoReq) returns (Empty);
}
