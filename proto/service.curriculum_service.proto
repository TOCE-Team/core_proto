syntax = "proto3";
package  curriculum_service;

import "curriculum.course_proto_model.proto";
import "curriculum.course_management_model.proto";
import "curriculum.section_proto_model.proto";
import "curriculum.lesson_proto_model.proto";
import "curriculum.assignments_model.proto";
import "curriculum.quiz_model.proto";
import "curriculum.comment_model.proto";
import "curriculum.affiliate_model.proto";
import "curriculum.course_event_model.proto";
import "curriculum.referral_model.proto";

message Empty {}
message SuccessfulProto {
  string res = 1;
}

service CurriculumServiceProto {
  // Course
  rpc CreateCourseCall(CreateCourseProtoReq) returns (CreateCourseProtoRes);
  rpc GetCourseByCourseIdCall(GetCourseByCourseIdProtoReq) returns (CourseProtoModel);
  //rpc GetAllCourseByCategoryIdCall(GetAllCourseByCategoryIdProtoReq) returns (CourseProtoModel);
  rpc GetAllLessonFreeByCourseIdCall(GetAllLessonFreeByCourseIdProtoReq) returns (LessonProtoList);
  rpc GetCourseByCourseSlugCall(GetCourseByCourseSlugProtoReq) returns (CourseProtoModel);
  rpc GetOwnerCall(GetOwnerReq) returns (GetOwnerRes);
  rpc UpdateCourseCall(UpdateCourseProtoReq) returns (UpdateCourseProtoRes);
  rpc GetAllCoursesCall(GetAllCoursesReq) returns (GetAllCoursesRes);
  rpc GetCourseSectionsAndLessonsCall(GetCourseSectionsAndLessonsReq) returns (GetCourseSectionsAndLessonsRes);
  rpc RegisterBootcampCall(RegisterBootcampProtoReq) returns (RegisterBootcampProtoRes);
  rpc GetAllStudentInBootcampCall(GetAllStudentInCourseProtoReq) returns (GetAllStudentInBootcampProtoRes);
  rpc DeleteCourseCall(DeleteCourseProtoReq) returns (Empty);
  rpc RestoreCourseCall(RestoreCourseProtoReq) returns (Empty);
  rpc GetAllPurchasedCourseByUserIdCall(GetAllPurchasedCourseByUserIdReq) returns (GetAllPurchasedCourseByUserIdRes);

  // Sponsor
  rpc GetCourseSponsorCall(GetCourseSponsorProtoReq) returns(GetCourseSponsorProtoRes);
  rpc CreateCourseSponsorCall(CreateCourseSponsorProtoReq) returns(CourseSponsorProtoModel);
  rpc DeleteCourseSponsorCall(DeleteCourseSponsorProtoReq) returns(Empty);

  // Section
  rpc CreateSectionCall(CreateSectionProtoReq) returns (SectionProtoModel);
  rpc GetSectionByCourseIdAndSectionIdCall(GetSectionByCoureIdAndSectionIdProtoReq) returns (SectionProtoModel);
  rpc UpdateSectionCall(UpdateSectionProtoReq) returns (UpdateSectionProtoRes);
  rpc GetAllSectionInCourseByCourseIdCall(GetAllSectionInCourseByCoureIdProtoReq) returns (SectionList);
  rpc DeleteSectionCall(DeleteSectionProtoReq) returns (Empty);
  rpc RestoreSectionCall(RestoreSectionProtoReq) returns (Empty);

  //lesson
  rpc CreateLessonCall(CreateLessonProtoReq) returns (CreateLessonProtoRes);
  rpc UpdateLessonCall(UpdateLessonProtoReq) returns (UpdateLessonProtoRes);
  rpc GetLessonCall(GetLessonProtoReq) returns (LessonProtoModel);
  rpc GetAllLessonBySectionIdCall(GetAllLessonBySectionIdProtoReq) returns (LessonProtoList);
  rpc AddLessonCall(AddLessonProtoReq) returns (AddLessonProtoRes);
  rpc DeleteLessonCall(DeleteLessonProtoReq) returns (Empty);
  rpc RestoreLessonCall(RestoreLessonProtoReq) returns (Empty);

  // QuizVideo
  rpc GetQuizVideoCall(GetQuizVideoProtoReq) returns (GetQuizVideoProtoRes);
  rpc CreateQuizVideoCall(CreateQuizVideoProtoReq) returns (QuizVideoProtoModel);
  rpc UpdateQuizVideoCall(UpdateQuizVideoProtoReq) returns (QuizVideoProtoModel);
  rpc DeleteQuizVideoCall(DeleteQuizVideoProtoReq) returns (Empty);
  rpc CreateQuizVideoMapUserCall(CreateQuizVideoMapUserProtoReq) returns (Empty);

  // For course management

  rpc AddCourseManagementCall(AddCourseManagementProtoReq)       returns (CourseManagementBase);
  rpc GetCourseManagementCall(GetCourseManagementProtoReq)       returns (CourseManagementListProRes);
  rpc UpdateCourseManagementCall(UpdateCourseManagementProtoReq) returns (CourseManagementBase);
  rpc DeleteCourseManagementCall(DeleteCourseManagementProtoReq) returns (Empty);

  // Quiz
  rpc GetQuizBankByIdCall(GetQuizBankByIdProtoReq)      returns(QuizBankProtoModel);
  rpc GetQuizBankListCall(GetQuizBankListProtoReq)      returns(GetQuizBankListProtoRes);
  rpc CreateQuizBankCall(CreateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc UpdateQuizBankCall(UpdateQuizBankProtoReq)        returns(QuizBankProtoModel);
  rpc DeleteQuizBankCall(DeleteQuizBankProtoReq)        returns(Empty);

  rpc GetQuizByIdCall(GetQuizByIdProtoReq)              returns(QuizProtoModel);
  rpc GetQuizListCall(GetQuizListProtoReq)              returns(GetQuizListProtoRes);
  rpc CreateQuizCall(CreateQuizProtoReq)                returns(QuizProtoModel);
  rpc ReCreateQuizCall(ReCreateQuizProtoReq)                returns(QuizProtoModel);
  rpc UpdateQuizCall(UpdateQuizProtoReq)                returns(QuizProtoModel);
  rpc DeleteQuizCall(DeleteQuizProtoReq)                returns(Empty);

  rpc CreateQuizSetCall(CreateQuizSetProtoReq)          returns(Empty);
  rpc GetQuizSetByIdCall(GetQuizSetByIdProtoReq)        returns(QuizSetProtoModel);
  rpc GetQuizSetListCall(GetQuizSetListProtoReq)        returns(GetQuizListProtoRes);
  rpc GetQuizSetRandomCall(GetQuizSetRandomReq)         returns(GetQuizListProtoRes);
  rpc DeleteQuizSetCall(DeleteQuizSetProtoReq)          returns(Empty);

  rpc GetQuizTestCall(GetQuizTestProtoReq)              returns(QuizTestProtoModel);
  rpc GetQuizTestListCall(GetQuizTestListReq)           returns(GetQuizTestListRes);
  rpc CreateQuizTestCall(CreateQuizTestProtoReq)        returns(QuizTestProtoModel);
  rpc UpdateQuizTestCall(UpdateQuizTestProtoReq)        returns(QuizTestProtoModel);
  rpc DeleteQuizTestCall(DeleteQuizTestProtoReq)        returns(Empty);

  rpc GetQuizTestSetCall(GetQuizTestSetProtoReq)        returns(QuizTestBaseList);
  rpc CreateQuizAndAddToTestCall(CreateQuizAndAddToTestProtoReq) returns(Empty);
  rpc CreateQuizTestSetCall(CreateQuizTestSetProtoReq)  returns(Empty);
  rpc CreateQuizTestSetRandomCall(CreateQuizTestSetRandomReq) returns(Empty);
  rpc DeleteQuizTestSetCall(DeleteQuizTestSetProtoReq)  returns(Empty);

  rpc GetQuizSubmissionByIdCall(GetQuizSubmissionByIdProtoReq)  returns(QuizSubmissionProtoModel);
  rpc GetQuizSubmissionListCall(GetQuizSubmissionListReq)       returns(GetQuizSubmissionListRes);
  rpc CreateQuizSubmissionCall(CreateQuizSubmissionProtoReq)    returns(QuizSubmissionProtoModel);
  rpc DeleteQuizSubmissionCall(DeleteQuizSubmissionProtoReq)    returns(Empty);


  // For assignment
  // CRUD assignment
  rpc CreateAssignmentCall(CreateAssignmentProtoReq) returns (AssignmentProtoModel);
  rpc GetAssignmentsCall(AssignmentQuery) returns (AssignmentList);
  rpc GetAssignmentByIdCall(GetAssignmentByIdProtoReq) returns (AssignmentProtoModel);
  rpc UpdateAssignmentCall(UpdateAssignmentProtoReq) returns (AssignmentProtoModel);
  rpc DeleteAssignmentCall(DeleteAssignmentProtoReq) returns (Empty);

  rpc AddQuizToAssignmentCall(AddQuizProtoReq) returns (Empty);
  rpc AddGraderToAssignmentCall(AddGraderProtoReq) returns (Empty);
  rpc ViewGraderCall(ViewGraderProtoReq) returns (GraderListId);
  rpc AddRequirementToAssignmentCall(AddRequirementProtoReq) returns (Empty);
  rpc UpdateRequirementCall(UpdateAssignmentRequirementProtoReq) returns (Empty);

  rpc UploadSubmissionCall(AssignmentSubmissionProtoModel) returns (AssignmentSubmissionProtoModel);

  // For Comment
  rpc AddCommentToPostCall(AddCommentToPostProtoReq) returns (CommentProtoModel);
  rpc AddCommentToCommentCall(AddCommentToCommentProtoReq) returns (CommentProtoModel);
  rpc UpVoteCommentCall(VoteCommentProtoReq) returns (Empty);
  rpc DownVoteCommentCall(VoteCommentProtoReq) returns (Empty);
  rpc GetCommentPostCall(GetCommentPostProtoReq) returns (ListCommentTreeNodeProtoModel);
  rpc UpdateCommentCall(UpdateCommentProtoReq) returns (CommentProtoModel);
  rpc DeleteCommentCall(DeleteCommentProtoReq) returns (Empty);
  rpc GetCommentByIdCall(GetCommentByIdProtoReq) returns (CommentProtoModel);
  /// post
  rpc GetListPostCall(PostQuery) returns (ListPost);
  rpc CreatePostCall(CreatePostProtoReq) returns (PostProtoModel);
  rpc UpdatePostCall(UpdatePostProtoReq) returns (PostProtoModel);
  rpc DeletePostCall(DeletePostProtoReq) returns (Empty);
  rpc GetPostByIdCall(GetPostByIdProtoReq) returns (PostProtoModel);

  rpc AddPostToCourseCall(AddPostCourseProtoReq) returns (Empty);
  rpc AddPostToLessonCall(AddPostLessonProtoReq) returns (Empty);
  rpc AddPostToSectionCall(AddPostSectionProtoReq) returns (Empty);
  rpc AddPostToAssignmentCall(AddPostAssignmentProtoReq) returns (Empty);

  rpc CreateScoreCall(CreateScoreProtoReq) returns (ScoreProtoModel);
  rpc DeleteScoreCall(DeleteScoreProtoReq) returns (Empty);
  rpc QueryScoreCall(ScoreQuery) returns (ScoreList);
  rpc GetQuizByAssignmentCall(GetQuizByAssignmentIdProtoReq) returns (GetQuizListProtoRes);

  rpc GetAllRatingByCourseCall(GetAllRatingByCourseIdProtoReq) returns (RatingList);
  rpc DeleteRatingCall(DeleteRatingProtoReq) returns (Empty);
  rpc CreateRatingCall(CreateRatingProtoReq) returns (RatingProtoModel);
  rpc UpdateRatingCall(UpdateRatingProtoReq) returns (RatingProtoModel);


  // AffiliateProtoModel

  rpc GetAffiliateListCall(GetAffiliateListProtoReq) returns(GetAffiliateListProtoRes);
  rpc GetAffiliateByIdCall(GetAffiliateByIdProtoReq) returns(AffiliateProtoModel);
  rpc GetAffiliateByUserCall(GetAffiliateByUserProtoReq) returns(AffiliateProtoModel);
  rpc CreateAffiliateCall(CreateAffiliateProtoReq) returns(AffiliateProtoModel);
  rpc UpdateAffiliateCall(UpdateAffiliateProtoReq) returns(AffiliateProtoModel);
  rpc DeleteAffiliateCall(DeleteAffiliateProtoReq) returns(Empty);

  //AffiliatePerformanceProtoModel

  rpc GetAffiliatePerformanceByIdCall(GetAffiliatePerformanceByIdProtoReq) returns(AffiliatePerformanceProtoModel);
  rpc UpdateAffiliatePerformanceCall(UpdateAffiliatePerformanceProtoReq) returns(AffiliatePerformanceProtoModel);

  //AffiliateCouponProtoModel

  rpc GetAffiliateCouponListCall(GetAffiliateCouponListProtoReq) returns(GetAffiliateCouponListProtoRes);
  rpc GetAffiliateCouponByIdCall(GetAffiliateCouponByIdProtoReq) returns(AffiliateCouponProtoModel);
  rpc CreateAffiliateCouponCall(CreateAffiliateCouponProtoReq) returns(AffiliateCouponProtoModel);
  rpc UpdateAffiliateCouponCall(UpdateAffiliateCouponProtoReq) returns(AffiliateCouponProtoModel);
  rpc DeleteAffiliateCouponCall(DeleteAffiliateCouponProtoReq) returns(Empty);

  // AffiliateReferralProtoModel
  rpc GetAffiliateReferralByIdCall(GetAffiliateReferralByIdProtoReq) returns(GetAffiliateReferralByIdProtoRes);
  rpc CreateAffiliateReferralCall(CreateAffiliateReferralProtoReq) returns(AffiliateReferralProtoModel);

  // AffiliateCampaignProtoModel
  rpc GetAffiliateCampaignListCall(GetAffiliateCampaignListProtoReq) returns(GetAffiliateCampaignListProtoRes);
  rpc GetAffiliateCampaignByIdCall(GetAffiliateCampaignByIdProtoReq) returns(AffiliateCampaignProtoModel);
  rpc CreateAffiliateCampaignCall(CreateAffiliateCampaignProtoReq) returns(AffiliateCampaignProtoModel);
  rpc UpdateAffiliateCampaignCall(UpdateAffiliateCampaignProtoReq) returns(AffiliateCampaignProtoModel);
  rpc DeleteAffiliateCampaignCall(DeleteAffiliateCampaignProtoReq) returns(Empty);

  // Coupon used
  rpc GetAffiliateCouponUsedByIdCall(GetAffiliateCouponUsedByIdProtoReq) returns(GetAffiliateCouponUsedByIdProtoRes);
  rpc CreateAffiliateCouponUsedCall(CreateAffiliateCouponUsedProtoReq) returns(AffiliateCouponUsedProtoModel);

  // Homepage
  rpc GetHomepageAdvertisingCall(Empty) returns(HomepageAdvertisingRes);
  rpc CreateNotificationBarCall(NotificationBarProto) returns(Empty);
  rpc CreateCourseAdvertisingCall(CreateCourseAdvertisingProtoReq) returns(Empty);

  // Get outline
  rpc GetOutlineByCourseIdCall(GetOutlineByCourseIdReq) returns(GetCourseSectionsAndLessonsRes);

  // Course Event
  rpc GetCourseEventByIdCall(GetCourseEventByIdProtoReq) returns(CourseEventProtoModel);
  rpc GetCourseEventsCall(GetCourseEventsProtoReq) returns(GetCourseEventByCourseProtoRes);
  rpc CreateCourseEventCall(CreateCourseEventProtoReq) returns(CourseEventProtoModel);
  rpc UpdateCourseEventCall(UpdateCourseEventProtoReq) returns(CourseEventProtoModel);
  rpc DeleteCourseEventCall(DeleteCourseEventProtoReq) returns(Empty);

  // Create multi coupon
  rpc CreateMultiCouponCall(CreateMultiCouponProtoReq) returns(CreateMultiCouponProtoRes);
///  rpc GetHomepageCall(Empty) returns (HomepageRes);

  // Create referral term
  rpc CreateReferralTermCall(CreateReferralTermsProtoReq) returns(SuccessfulProto);

  //rpc AddCoursePartnerCall(AddCoursePartnerProto) returns(SuccessfulProto);
  //rpc AddPlatformPartnerCall(AddCoursePartnerProto) returns(SuccessfulProto);
  rpc AddCoursePartnerCall(AddCoursePartnerProto) returns(SuccessfulProto);
  rpc GetCourseSupportByCourseIdCall(GetCourseSupportProtoReq) returns (CourseSupportProtoRes);
  //  Get ref link
  rpc GetUserReferralLinkCall(GetUserReferralProtoReq) returns (GetUserReferralProtoRes);
  rpc CalculateReferralPointCall(CalculateReferralPointProtoReq) returns (SuccessfulProto);

  rpc GetReferralPartnerCall(GetReferralPartnerListProtoReq) returns (GetReferralPartnerListProtoRes);
  rpc GetReferralReportCall(GetReferralReportProtoReq) returns (GetReferralReportProtoRes);

  rpc GetPersonalReferralReportCall(GetPersonalReferralReportProtoReq) returns (GetPersonalReferralReportProtoRes);
  rpc GetReferralReportByCourseIdCall(GetReferralReportByCourseIdProtoReq) returns (GetReferralReportByCourseIdProtoRes);

  //rpc GetUserReferralReportByReferralIdCall(GetUserReferralReportByReferralIdProtoReq) returns (GetReferralDetailReportByReferralCodeProtoModel);
  //rpc GetKolReferralReportByReferralIdCall(GetKolReferralReportByReferralIdProtoReq) returns (GetReferralDetailReportByReferralCodeProtoModel);

  rpc GetDiscountPercentByReferralCodeCall(GetDiscountPercentByReferralCodeProtoReq) returns (GetDiscountPercentByReferralCodeProtoRes);
  rpc GetReferralDetailReportByReferralCodeCall(GetReferralDetailReportByReferralCodeProtoReq) returns (GetReferralDetailReportByReferralCodeProtoRes);
  rpc KolCreateDiscountCall(KolCreateDiscountProtoReq) returns (SuccessfulProto);
  rpc AddReferralWithdrawBankProtoReqCall(AddReferralWithdrawBankProtoReq) returns (SuccessfulProto);
  rpc GetReferralWithdrawBankProtoReqCall(GetReferralWithdrawBankProtoReq) returns (GetReferralWithdrawBankProtoRes);
  rpc UpdateReferralWithdrawBankProtoReqCall(UpdateReferralWithdrawBankProtoReq) returns (SuccessfulProto);

  rpc RegisterBootcampFromExternalCall(RegisterBootcampProtoReq) returns (RegisterBootcampProtoRes);

  rpc GetAvailableWithdrawByReferralIdCall(GetAvailableWithdrawByReferralIdProtoReq) returns (GetAvailableWithdrawByReferralIdProtoRes);

  rpc SendReferralWithtdrawCall(SendReferralWithtdrawReq) returns (SuccessfulProto);

  rpc ResponeReferralWithtdrawCall(WithdrawResponeProtoReq) returns (SuccessfulProto);
  rpc GetReferralTransactionHistoryByTransactionIdCall(GetReferralTransactionHistoryByTransactionIdReq) returns (GetReferralTransactionHistoryByTransactionIdRes);
}
