syntax = "proto3";
package  curriculum_service;


message AssignmentProtoModel {
	string assignmentId = 1;
	string courseId = 2;
	string ownerId = 3;
	string title = 4;
	string description = 5;
	bool publish = 6;
	repeated string notes = 7;
	int64 startAt = 8;
	int64 endAt = 9;
	int64 createdAt = 10;
	int64 updatedAt = 11;
}

message CreateAssignmentProtoReq {
	string courseId = 1;
	string ownerId = 2;
	string title = 3;
	string description = 4;
	bool publish = 5;
	repeated string notes = 6;
	int64 startAt = 7;
	int64 endAt = 8;
}

message AssignmentList {
	repeated AssignmentProtoModel assignments = 1;
}

message GetAssignmentByIdProtoReq{
	string assignmentId = 1;
}

message AssignmentQuery {
    optional int64  offset       = 1;
    optional int32  limit        = 2;
    optional int64  startAt      = 3;
    optional int64  endAt        = 4;
}

message UpdateAssignmentProtoReq{
	string assignmentId    = 1;
	optional string title = 2;
	optional string description = 3;
	optional bool publish = 4;
	repeated string notes = 5;
	optional int64 startAt = 6;
	optional int64 endAt   = 7;
}

message DeleteAssignmentProtoReq {
	string assignmentId = 1;
}

message AddQuizProtoReq {
	string assignmentId = 1;
	string quizId = 2;
}

message AddGraderProtoReq{
	string assignmentId = 1;
	string graderId = 2;
} 

message ViewGraderProtoReq {
	string assignmentId   = 1;
}

message GraderListId {
	repeated string ids = 1;
}

enum UserLevel {	
  Beginner = 0;
  Junior = 1;
  Intermediate = 2;
  Senior = 3;
  Expert = 4;
  Leader = 5;
  Professor = 6;
  Master = 7;
}

message AddRequirementProtoReq {
	string assignmentId = 1;
	repeated string occupationId = 2;
	UserLevel level = 3; 
	uint32 teamMemberLimit = 4; 
	uint32 minimumTeamSize = 5;
	string material = 6;
}

message UpdateAssignmentRequirementProtoReq {
	string assignmentId = 1;
	string material = 2;
}

message AssignmentSubmissionProtoModel {
	string assignmentId = 1;
	string courseId = 2;
	string UserId = 3;
	string url = 4;
}

message ScoreProtoModel {
	string scoreId = 1;
	string userId  = 2;
	string assignmentId = 3;
	string graderId = 4;
	int32 score = 5;
	string feedback = 6;
	string title = 7;
}

message ScoreList {
	repeated ScoreProtoModel scoreList = 1;
}

message CreateScoreProtoReq {
	string userId  = 2;
	string assignmentId = 3;
	string graderId = 4;
	int32 score = 5;
	string feedback = 6;
	string title = 7;

}

message DeleteScoreProtoReq {
	string scoreId = 1;
}

message ScoreQuery {
    optional int64  offset      = 1;
    optional int32  limit       = 2;
    optional string userId      = 3;
    optional string graderId    = 4;
	optional string assignmentId = 5;
	optional int32 score = 6;
	optional string title = 7;
}

message GetQuizByAssignmentIdProtoReq {
	string assignmentId = 1;
}

